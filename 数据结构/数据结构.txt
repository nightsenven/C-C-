线性表线性表是指在一堆数据中的任意一个节点，有且仅有一个直接前驱节点（第一个除外），有且仅有一个直接后驱节点（最后一个除外）。表示数据与数据之间一对一的关系。
一、 顺序表：顺序存储的线性表
    按照线性数据的关系存入数组。
  优点：
  	1. 空间利用率高
  	2. 查找效率高
  缺点：
  	1. 必须使用连续的内存。
  	2. 插入和删除效率低
  	3. 扩展长度比较麻烦，需要预先知道数据的长度

二、 链表：链式存储的线性表。
    为每一个数据建立一个数据节点，按照线性数据的关系将所有的数据节点串联起来。数据节点一般是存放在堆当中的。
  优点：
  	1. 可以不使用连续的内存
  	2. 插入删除效率高
  	3. 长度可以任意扩展
  缺点：
  	1. 空间利用率低
  	2. 查找效率低

总结：
  上述两种线性表的存储方式各适用于什么情况？
   预先知道数据长度，如果对于数据要经常性使用查找操作，使用顺序表；如果对于数据要经常使用删除插入操作，使用链式表；
三、 非线性表：不是线性表的存储结构。如：树等等。
四、 Linux内核链表：
    为什么会有内核链表？
      单链表或者双向循环链表等普桶链表都是有缺陷的；每一个链表的节点都是特殊的，导致每一个链表都是特殊的，对于链表的所有操作也是特殊的，需要为每一种链表设计一套操作函数。
    内核链表原理： ①、将链表结构抽象出来，去除节点中的具体数据，只剩下单纯包含逻辑的纯粹链表。
                  ②、将抽象出来的链表放进存放具体数据节点中。
    内核链表的优点：对链表的操作与具体数据无关，对于所有的链表都可以使用同一套操作函数。
